name: Lint, test and deploy
on:
  pull_request:
    types: [opened, edited]
  workflow_dispatch:  
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm # ficheiros ou pastas do que se quer guardar em cache~
          # identifica a cache
          # a key deve ter um valor que seja parcialmente dinamico, para que a key mude sempre que as dependencias mudarem
          key: deps-nome-modules-${{ hashFiles('**/package-lock.json')}} 
      - name: Install dependencies
        run: npm ci 
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: # permite definir as keys dos outputs que serão usados para guardar valores simples
      script-file: ${{ steps.js-file-step-id.outputs.file}}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm # ficheiros ou pastas do que se quer guardar em cache
          # identifica a cache
          # a key deve ter um valor que seja parcialmente dinamico, para que a key mude sempre que as dependencias mudarem
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}} 
      - name: Install dependencies
        run: npm ci 
      - name: Build code
        run: npm run build
      - name: Publish JS filename
        id: js-file-step-id
        # acha o ficheiro js dentro dos assets recorrendo a uma regex, e retorna o nome do ficheiro.continue-on-error.continue-on-error. 
        # O nome é atribuido à variavel script-file e escreve num ficheiro de OUTPUT cujo path é dado pela variavel de ambiente GITHUB_OUTPUT
        run: find dist/assets/*.js -type f -execdir echo 'file={}' >> $GITHUB_OUTPUT ';' 
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files  # artifacts name
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts #download the previous artifacts
        uses: actions/download-artifact@v4 # this action will download the artifact and unzip here
        with: 
          name: dist-files 
          # path: dist # onde quero colocar os ficheiros do zip. Se nao indicar path vai ser na diretoria atual (root)
      - name: Output
        run: ls
      - name: Output js file name
        run: echo "${{ needs.build.outputs.script-file}}" #O needs context é usado para aceder aos outputs de todos os jobs
      - name: Deploy
        run: echo "Deploying"